# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3cba6dde-e0b5-48ef-a318-2fe39541fc61'
  imageRepository: 'assetmanagementbe'
  containerRegistry: 'rookiesb7.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: 'Build and Test'
    condition: ne(variables['build.sourceBranch'], 'refs/heads/main')
    jobs:
      - job: Api_Asset_Management_NestJS_Build
        displayName: 'Lint, Test, and Audit NestJS'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install -g @nestjs/cli
              npm install
              npm run prisma:generate
            displayName: 'Install dependencies'

          - script: |
              npm run lint
            displayName: 'Run lint'

          - script: |
              npm run gitleaks
            displayName: 'Run GitLeaks'

          - script: |
              npm run test
            displayName: 'Run tests'

          - script: |
              npm run test:cov
            displayName: 'Display coverage information'
            continueOnError: true

          - script: |
              npm audit --audit-level=high
            displayName: 'Run npm audit'
            continueOnError: true

          - script: |
              npm run build
            displayName: 'Build project'

  - stage: Deploy
    displayName: Build and push image stage
    dependsOn: Build
    condition: eq(variables['build.sourceBranch'], 'refs/heads/main')
    jobs:
      - job: Api_Asset_Management_NestJS_Deploy
        displayName: 'Build and push image to Azure Container Registry'
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                latest
                $(tag)
